/**
 * üé≠ DEFINICIONES DE TIPOS PARA ROLES
 * 
 * Este archivo contiene todas las definiciones de tipos TypeScript relacionadas con
 * la gesti√≥n de roles y permisos en el sistema de facturaci√≥n. Proporciona interfaces
 * robustas para garantizar la coherencia en el control de acceso basado en roles (RBAC).
 * 
 * Prop√≥sito:
 * - Definir contratos de datos para entidades de roles y permisos
 * - Asegurar consistencia en operaciones CRUD de roles
 * - Facilitar la validaci√≥n autom√°tica de tipos para autorizaci√≥n
 * - Proporcionar interfaces claras para componentes de administraci√≥n
 * 
 * Funcionalidades Cubiertas:
 * - Gesti√≥n completa de roles del sistema
 * - Control de acceso basado en roles (RBAC)
 * - Asignaci√≥n y modificaci√≥n de permisos
 * - Jerarqu√≠a de roles para diferentes niveles de acceso
 * - Validaci√≥n de permisos en operaciones cr√≠ticas
 * 
 * Roles del Sistema:
 * - Administrador: Acceso completo al sistema
 * - Usuario: Acceso limitado a funciones b√°sicas
 * - Roles personalizados: Configurables seg√∫n necesidades
 * 
 * Compatibilidad:
 * - Compatible con las respuestas de la API del backend
 * - Integrado con sistema de autenticaci√≥n JWT
 * - Soporte completo para operaciones as√≠ncronas con Promises
 * - Optimizado para middleware de autorizaci√≥n
 * 
 * @autor Sistema de Facturaci√≥n
 * @versi√≥n 1.0.0
 * @desde 2025-06-25
 */

/**
 * üé≠ DTO principal para datos de roles desde la API
 * 
 * Interfaz que representa la estructura exacta de datos de roles
 * tal como la devuelve la API del backend.
 */
export interface RoleDto {
  /** ID √∫nico del rol en el sistema */
  id: string;
  /** Nombre descriptivo del rol */
  name: string;
}

/**
 * ‚ûï DTO para creaci√≥n de nuevos roles
 * 
 * Interfaz que define los datos requeridos para crear un nuevo rol
 * en el sistema a trav√©s de la API.
 */
export interface RoleCreateDto {
  /** Nombre del nuevo rol a crear */
  name: string;
}

/**
 * ‚úèÔ∏è DTO para actualizaci√≥n de roles existentes
 * 
 * Interfaz que define los datos necesarios para actualizar un rol
 * existente, incluyendo su ID para identificaci√≥n.
 */
export interface RoleUpdateDto {
  /** ID √∫nico del rol a actualizar */
  id: string;
  /** Nuevo nombre del rol */
  name: string;
}
