/**
 * üßæ DEFINICIONES DE TIPOS PARA FACTURAS
 * 
 * Este archivo contiene todas las definiciones de tipos TypeScript relacionadas con
 * la gesti√≥n de facturas en el sistema. Proporciona interfaces robustas para garantizar
 * la coherencia de datos en todo el proceso de facturaci√≥n.
 * 
 * Prop√≥sito:
 * - Definir contratos de datos para entidades de facturaci√≥n
 * - Asegurar consistencia en operaciones CRUD de facturas
 * - Facilitar la validaci√≥n autom√°tica de tipos para facturaci√≥n
 * - Proporcionar interfaces claras para componentes de facturaci√≥n
 * 
 * Funcionalidades Cubiertas:
 * - Facturaci√≥n completa con detalles de productos
 * - Relaciones entre facturas, clientes y usuarios
 * - C√°lculos autom√°ticos de totales y subtotales
 * - Filtros avanzados para b√∫squeda de facturas
 * - Formularios de creaci√≥n y edici√≥n de facturas
 * 
 * Compatibilidad:
 * - Compatible con las respuestas de la API del backend
 * - Integrado con React Hook Form para validaci√≥n de formularios
 * - Soporte completo para operaciones as√≠ncronas con Promises
 * - Optimizado para uso con React Query y estado global
 * 
 * @autor Sistema de Facturaci√≥n
 * @versi√≥n 1.0.0
 * @desde 2025-06-25
 */

/**
 * üßæ Interfaz base para datos de facturas
 * 
 * Define la estructura fundamental de una factura con campos
 * esenciales para identificaci√≥n, relaciones y c√°lculos.
 */
interface Invoice {
  /** ID √∫nico de la factura en el sistema */
  InvoiceID: number;
  /** N√∫mero de identificaci√≥n del cliente */
  ClientIDNumber: string;
  /** ID del usuario que cre√≥ la factura */
  UserID: number;
  /** Fecha de creaci√≥n de la factura */
  Date: string | Date;
  /** Total calculado de la factura */
  Total: number;
  /** Datos del cliente asociado (relaci√≥n opcional) */
  Client?: Client;
  /** Datos del usuario que cre√≥ la factura (relaci√≥n opcional) */
  User?: User;
  /** Lista de detalles/l√≠neas de la factura (relaci√≥n opcional) */
  Details?: InvoiceDetail[];
}

/**
 * üìã Interfaz para detalles/l√≠neas de factura
 * 
 * Define la estructura de cada l√≠nea de producto dentro de una factura
 * con c√°lculos autom√°ticos de subtotales.
 */
interface InvoiceDetail {
  /** ID √∫nico del detalle */
  DetailID: number;
  /** ID de la factura padre (clave for√°nea) */
  InvoiceID_FK: number;
  /** ID del producto (clave for√°nea) */
  ProductID_FK: number;
  /** Cantidad del producto en esta l√≠nea */
  Quantity: number;
  /** Precio unitario del producto en el momento de la factura */
  UnitPrice: number;
  /** Subtotal calculado (Quantity √ó UnitPrice) */
  Subtotal: number;
  /** Datos del producto asociado (relaci√≥n opcional) */
  Product?: Product;
}

/**
 * üìù Interfaz para valores de formularios de facturas
 * 
 * Define la estructura de datos para formularios de creaci√≥n y edici√≥n
 * de facturas con validaci√≥n de productos y cantidades.
 */
interface InvoiceFormValues {
  /** N√∫mero de identificaci√≥n del cliente */
  ClientIDNumber: string;
  /** Lista de productos con cantidades y precios */
  Products: Array<{
    /** ID del producto seleccionado */
    ProductID: number;
    /** Cantidad solicitada */
    Quantity: number;
    /** Precio unitario del producto */
    UnitPrice: number;
  }>;
  /** ID del usuario que crea la factura */
  UserID: number;
}

/**
 * üîó Interfaz extendida para facturas con datos completos
 * 
 * Incluye todos los datos relacionales completos de una factura
 * para operaciones que requieren informaci√≥n detallada.
 */
interface FullInvoice extends Invoice {
  /** Detalles completos con informaci√≥n de productos */
  Details: Array<InvoiceDetail & { Product: Product }>;
}

/**
 * üîç Interfaz para filtros de b√∫squeda de facturas
 * 
 * Define los par√°metros disponibles para filtrar y buscar facturas
 * en listados paginados con capacidades avanzadas de filtrado.
 */
interface InvoiceFilters {
  /** Fecha de inicio para filtrado por rango */
  from?: string | Date;
  /** Fecha de fin para filtrado por rango */
  to?: string | Date;
  /** Filtrar por cliente espec√≠fico */
  byClient?: string;
  /** Filtrar por usuario espec√≠fico */
  byUser?: number;
  /** Campo por el cual ordenar resultados */
  orderBy?: 'date' | 'total';
  /** Direcci√≥n del ordenamiento */
  order?: 'asc' | 'desc';
  /** L√≠mite de resultados por consulta */
  limit?: number;
}

/**
 * üßæ DTO principal para datos de facturas desde la API
 * 
 * Interfaz que representa la estructura exacta de datos de facturas
 * tal como la devuelve la API del backend.
 */
export interface InvoiceDto {
  /** ID √∫nico de la factura en la base de datos */
  invoiceId: number;
  /** N√∫mero de factura generado autom√°ticamente */
  invoiceNumber: string;
  /** Datos completos del cliente asociado */
  client: ClientDto;
  /** Fecha de emisi√≥n de la factura */
  issueDate: string;
  /** Total calculado de la factura */
  total: number;
}

/**
 * ‚úèÔ∏è DTO para actualizaci√≥n de facturas existentes
 * 
 * Interfaz que define los datos necesarios para actualizar una factura
 * existente con nuevos detalles de productos.
 */
interface InvoiceUpdateDto {
  /** ID del cliente asociado */
  clientId: number;
  /** Fecha de emisi√≥n de la factura */
  issueDate: string;
  /** Lista de detalles de productos actualizados */
  invoiceDetails: Array<{
    /** ID del producto */
    productId: number;
    /** Cantidad del producto */
    quantity: number;
    /** Precio unitario del producto */
    unitPrice: number;
  }>;
}

/**
 * ‚ûï DTO para creaci√≥n de nuevas facturas
 * 
 * Interfaz que define los datos requeridos para crear una nueva factura
 * en el sistema a trav√©s de la API.
 */
interface InvoiceCreateDto {
  /** N√∫mero de factura √∫nico */
  invoiceNumber: string;
  /** ID del cliente asociado */
  clientId: number;
  /** ID del usuario que crea la factura */
  userId: string;
  /** Fecha de emisi√≥n de la factura */
  issueDate: string;
  /** Observaciones adicionales de la factura */
  observations: string;
  /** Lista de detalles de productos */
  invoiceDetails: Array<{
    /** ID del producto */
    productId: number;
    /** Cantidad del producto */
    quantity: number;
    /** Precio unitario del producto */
    unitPrice: number;
  }>;
}

/**
 * üìã DTO para detalles individuales de factura
 * 
 * Interfaz simplificada para representar una l√≠nea de producto
 * en una factura con informaci√≥n b√°sica.
 */
interface InvoiceDetailDto {
  /** ID del producto */
  productId: number;
  /** Cantidad del producto */
  quantity: number;
  /** Precio unitario del producto */
  unitPrice: number;
}

/**
 * üë• DTO de cliente para contexto de facturaci√≥n
 * 
 * Interfaz espec√≠fica para datos de cliente en el contexto
 * de facturaci√≥n con campos opcionales.
 */
export interface ClientDto {
  /** ID √∫nico del cliente */
  clientId: number;
  /** Tipo de identificaci√≥n */
  identificationType: 'cedula';
  /** N√∫mero de identificaci√≥n */
  identificationNumber: string;
  /** Primer nombre del cliente */
  firstName: string;
  /** Apellido del cliente */
  lastName: string;
  /** Correo electr√≥nico (opcional) */
  email?: string;
  /** Tel√©fono (opcional) */
  phone?: string;
  /** Direcci√≥n (opcional) */
  address?: string;
}

/**
 * üè∑Ô∏è DTO de producto para contexto de facturaci√≥n
 * 
 * Interfaz simplificada para datos de producto en el contexto
 * de facturaci√≥n con informaci√≥n esencial.
 */
interface ProductDto {
  /** ID √∫nico del producto */
  productId: number;
  /** Nombre del producto */
  name: string;
  /** Precio unitario del producto */
  price: number;
  /** Stock disponible del producto */
  stock: number;
}
