/**
 * üë• DEFINICIONES DE TIPOS PARA CLIENTES
 * 
 * Este archivo contiene todas las definiciones de tipos TypeScript relacionadas con
 * la gesti√≥n de clientes en el sistema de facturaci√≥n. Proporciona interfaces robustas
 * para garantizar la coherencia de datos y la seguridad de tipos en toda la aplicaci√≥n.
 * 
 * Prop√≥sito:
 * - Definir contratos de datos para entidades de clientes
 * - Asegurar consistencia en operaciones CRUD de clientes
 * - Facilitar la validaci√≥n autom√°tica de tipos en tiempo de compilaci√≥n
 * - Proporcionar interfaces claras para componentes y servicios
 * 
 * Compatibilidad:
 * - Compatible con las respuestas de la API del backend
 * - Integrado con React Hook Form para validaci√≥n de formularios
 * - Soporte completo para operaciones as√≠ncronas con Promises
 * - Optimizado para uso con React Query y estado global
 * 
 * @autor Sistema de Facturaci√≥n
 * @versi√≥n 1.0.0
 * @desde 2025-06-25
 */

/**
 * üìù Interfaz base para datos de clientes
 * 
 * Define la estructura fundamental de un cliente con todos los campos
 * b√°sicos requeridos para identificaci√≥n y contacto.
 */
interface Client {
  /** N√∫mero de identificaci√≥n √∫nico del cliente */
  Identification: string;
  /** Primer nombre del cliente */
  FirstName: string;
  /** Apellido del cliente */
  LastName: string;
  /** N√∫mero de tel√©fono (opcional) */
  Phone?: string | null;
  /** Direcci√≥n de correo electr√≥nico (opcional) */
  Email?: string | null;
  /** Direcci√≥n f√≠sica (opcional) */
  Address?: string | null;
}

/**
 * üìã Interfaz para valores de formularios de clientes
 * 
 * Extiende la interfaz Client pero hace opcional el campo Identification
 * para casos donde se edita un cliente existente.
 */
interface ClientFormValues extends Omit<Client, 'Identification'> {
  /** Identificaci√≥n opcional para formularios de edici√≥n */
  Identification?: string;
}

/**
 * üîó Interfaz extendida para clientes con relaciones
 * 
 * Incluye datos relacionales como facturas asociadas al cliente
 * para operaciones que requieren datos completos.
 */
interface FullClient extends Client {
  /** Lista de facturas asociadas al cliente (opcional) */
  Invoices?: Invoice[];
}

/**
 * üîç Interfaz para filtros de b√∫squeda de clientes
 * 
 * Define los par√°metros disponibles para filtrar y buscar clientes
 * en listados paginados y operaciones de consulta.
 */
interface ClientFilters {
  /** T√©rmino de b√∫squeda general */
  search?: string;
  /** Filtro por n√∫mero de identificaci√≥n */
  byIdentification?: string;
  /** Filtro por primer nombre */
  byFirstName?: string;
  /** Filtro por correo electr√≥nico */
  byEmail?: string;
  /** L√≠mite de resultados por consulta */
  limit?: number;
}

/**
 * üè¢ DTO principal para datos de clientes desde la API
 * 
 * Interfaz que representa la estructura exacta de datos de clientes
 * tal como la devuelve la API del backend.
 */
export interface ClientDto {
  /** ID √∫nico del cliente en la base de datos */
  clientId: number;
  /** Tipo de identificaci√≥n (siempre 'cedula' en Costa Rica) */
  identificationType: 'cedula';
  /** N√∫mero de identificaci√≥n del cliente */
  identificationNumber: string;
  /** Primer nombre del cliente */
  firstName: string;
  /** Apellido del cliente */
  lastName: string;
  /** Correo electr√≥nico del cliente */
  email: string;
  /** N√∫mero de tel√©fono del cliente */
  phone: string;
  /** Direcci√≥n del cliente */
  address: string;
}

/**
 * ‚ûï DTO para creaci√≥n de nuevos clientes
 * 
 * Interfaz que define los datos requeridos para crear un nuevo cliente
 * en el sistema a trav√©s de la API.
 */
export interface ClientCreateDto {
  /** Tipo de identificaci√≥n (siempre 'cedula' para Costa Rica) */
  identificationType: 'cedula';
  /** N√∫mero de identificaci√≥n √∫nico */
  identificationNumber: string;
  /** Primer nombre del cliente */
  firstName: string;
  /** Apellido del cliente */
  lastName: string;
  /** Correo electr√≥nico del cliente */
  email: string;
  /** N√∫mero de tel√©fono del cliente */
  phone: string;
  /** Direcci√≥n del cliente */
  address: string;
}

/**
 * ‚úèÔ∏è DTO para actualizaci√≥n de clientes existentes
 * 
 * Interfaz que define los datos necesarios para actualizar un cliente
 * existente, incluyendo su ID para identificaci√≥n.
 */
export interface ClientUpdateDto {
  /** ID √∫nico del cliente a actualizar */
  clientId: number;
  /** Tipo de identificaci√≥n (siempre 'cedula' para Costa Rica) */
  identificationType: 'cedula';
  /** N√∫mero de identificaci√≥n √∫nico */
  identificationNumber: string;
  /** Primer nombre del cliente */
  firstName: string;
  /** Apellido del cliente */
  lastName: string;
  /** Correo electr√≥nico del cliente */
  email: string;
  /** N√∫mero de tel√©fono del cliente */
  phone: string;
  /** Direcci√≥n del cliente */
  address: string;
}
